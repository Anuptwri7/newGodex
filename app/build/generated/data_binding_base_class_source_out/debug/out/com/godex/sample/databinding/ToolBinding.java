// Generated by view binder compiler. Do not edit!
package com.godex.sample.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import com.godex.sample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btGetDPI;

  @NonNull
  public final Button btnSelectFile;

  @NonNull
  public final Button btnSendSelectedFile;

  @NonNull
  public final Button dcnt;

  @NonNull
  public final EditText edit00;

  @NonNull
  public final ListView in;

  @NonNull
  public final LinearLayout lbFileSelected;

  @NonNull
  public final TextView lbIsBLEConnected;

  @NonNull
  public final TextView lbIsFileSelected;

  @NonNull
  public final Button print;

  @NonNull
  public final Button printPDF;

  @NonNull
  public final Button send;

  @NonNull
  public final Button set;

  @NonNull
  public final EditText tbDelay;

  @NonNull
  public final EditText tbFrequency;

  @NonNull
  public final EditText tbTimes;

  @NonNull
  public final Button upload;

  private ToolBinding(@NonNull LinearLayout rootView, @NonNull Button btGetDPI,
      @NonNull Button btnSelectFile, @NonNull Button btnSendSelectedFile, @NonNull Button dcnt,
      @NonNull EditText edit00, @NonNull ListView in, @NonNull LinearLayout lbFileSelected,
      @NonNull TextView lbIsBLEConnected, @NonNull TextView lbIsFileSelected, @NonNull Button print,
      @NonNull Button printPDF, @NonNull Button send, @NonNull Button set,
      @NonNull EditText tbDelay, @NonNull EditText tbFrequency, @NonNull EditText tbTimes,
      @NonNull Button upload) {
    this.rootView = rootView;
    this.btGetDPI = btGetDPI;
    this.btnSelectFile = btnSelectFile;
    this.btnSendSelectedFile = btnSendSelectedFile;
    this.dcnt = dcnt;
    this.edit00 = edit00;
    this.in = in;
    this.lbFileSelected = lbFileSelected;
    this.lbIsBLEConnected = lbIsBLEConnected;
    this.lbIsFileSelected = lbIsFileSelected;
    this.print = print;
    this.printPDF = printPDF;
    this.send = send;
    this.set = set;
    this.tbDelay = tbDelay;
    this.tbFrequency = tbFrequency;
    this.tbTimes = tbTimes;
    this.upload = upload;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.tool, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btGetDPI;
      Button btGetDPI = ViewBindings.findChildViewById(rootView, id);
      if (btGetDPI == null) {
        break missingId;
      }

      id = R.id.btn_SelectFile;
      Button btnSelectFile = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectFile == null) {
        break missingId;
      }

      id = R.id.btn_SendSelectedFile;
      Button btnSendSelectedFile = ViewBindings.findChildViewById(rootView, id);
      if (btnSendSelectedFile == null) {
        break missingId;
      }

      id = R.id.dcnt;
      Button dcnt = ViewBindings.findChildViewById(rootView, id);
      if (dcnt == null) {
        break missingId;
      }

      id = R.id.edit00;
      EditText edit00 = ViewBindings.findChildViewById(rootView, id);
      if (edit00 == null) {
        break missingId;
      }

      id = R.id.in;
      ListView in = ViewBindings.findChildViewById(rootView, id);
      if (in == null) {
        break missingId;
      }

      LinearLayout lbFileSelected = (LinearLayout) rootView;

      id = R.id.lb_isBLEConnected;
      TextView lbIsBLEConnected = ViewBindings.findChildViewById(rootView, id);
      if (lbIsBLEConnected == null) {
        break missingId;
      }

      id = R.id.lb_isFileSelected;
      TextView lbIsFileSelected = ViewBindings.findChildViewById(rootView, id);
      if (lbIsFileSelected == null) {
        break missingId;
      }

      id = R.id.print;
      Button print = ViewBindings.findChildViewById(rootView, id);
      if (print == null) {
        break missingId;
      }

      id = R.id.printPDF;
      Button printPDF = ViewBindings.findChildViewById(rootView, id);
      if (printPDF == null) {
        break missingId;
      }

      id = R.id.send;
      Button send = ViewBindings.findChildViewById(rootView, id);
      if (send == null) {
        break missingId;
      }

      id = R.id.set;
      Button set = ViewBindings.findChildViewById(rootView, id);
      if (set == null) {
        break missingId;
      }

      id = R.id.tb_Delay;
      EditText tbDelay = ViewBindings.findChildViewById(rootView, id);
      if (tbDelay == null) {
        break missingId;
      }

      id = R.id.tb_Frequency;
      EditText tbFrequency = ViewBindings.findChildViewById(rootView, id);
      if (tbFrequency == null) {
        break missingId;
      }

      id = R.id.tb_Times;
      EditText tbTimes = ViewBindings.findChildViewById(rootView, id);
      if (tbTimes == null) {
        break missingId;
      }

      id = R.id.upload;
      Button upload = ViewBindings.findChildViewById(rootView, id);
      if (upload == null) {
        break missingId;
      }

      return new ToolBinding((LinearLayout) rootView, btGetDPI, btnSelectFile, btnSendSelectedFile,
          dcnt, edit00, in, lbFileSelected, lbIsBLEConnected, lbIsFileSelected, print, printPDF,
          send, set, tbDelay, tbFrequency, tbTimes, upload);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
