// Generated by view binder compiler. Do not edit!
package com.godex.sample.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.godex.sample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class XmlToPdfBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RelativeLayout containerFront;

  @NonNull
  public final TextView textViewBsauFront;

  @NonNull
  public final TextView textViewDealerInfo;

  @NonNull
  public final TextView textViewLetters;

  private XmlToPdfBinding(@NonNull ScrollView rootView, @NonNull RelativeLayout containerFront,
      @NonNull TextView textViewBsauFront, @NonNull TextView textViewDealerInfo,
      @NonNull TextView textViewLetters) {
    this.rootView = rootView;
    this.containerFront = containerFront;
    this.textViewBsauFront = textViewBsauFront;
    this.textViewDealerInfo = textViewDealerInfo;
    this.textViewLetters = textViewLetters;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static XmlToPdfBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static XmlToPdfBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.xml_to_pdf, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static XmlToPdfBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.containerFront;
      RelativeLayout containerFront = ViewBindings.findChildViewById(rootView, id);
      if (containerFront == null) {
        break missingId;
      }

      id = R.id.textViewBsauFront;
      TextView textViewBsauFront = ViewBindings.findChildViewById(rootView, id);
      if (textViewBsauFront == null) {
        break missingId;
      }

      id = R.id.textViewDealerInfo;
      TextView textViewDealerInfo = ViewBindings.findChildViewById(rootView, id);
      if (textViewDealerInfo == null) {
        break missingId;
      }

      id = R.id.textViewLetters;
      TextView textViewLetters = ViewBindings.findChildViewById(rootView, id);
      if (textViewLetters == null) {
        break missingId;
      }

      return new XmlToPdfBinding((ScrollView) rootView, containerFront, textViewBsauFront,
          textViewDealerInfo, textViewLetters);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
