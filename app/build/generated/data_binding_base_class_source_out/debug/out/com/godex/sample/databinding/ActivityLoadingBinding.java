// Generated by view binder compiler. Do not edit!
package com.godex.sample.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import com.godex.sample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoadingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLoadingCancel;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView tbLoadingText;

  @NonNull
  public final TextView tbLoadingText2;

  private ActivityLoadingBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnLoadingCancel, @NonNull ProgressBar progressBar,
      @NonNull TextView tbLoadingText, @NonNull TextView tbLoadingText2) {
    this.rootView = rootView;
    this.btnLoadingCancel = btnLoadingCancel;
    this.progressBar = progressBar;
    this.tbLoadingText = tbLoadingText;
    this.tbLoadingText2 = tbLoadingText2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoadingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoadingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_loading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoadingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_Loading_Cancel;
      Button btnLoadingCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnLoadingCancel == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tb_Loading_Text;
      TextView tbLoadingText = ViewBindings.findChildViewById(rootView, id);
      if (tbLoadingText == null) {
        break missingId;
      }

      id = R.id.tb_Loading_Text2;
      TextView tbLoadingText2 = ViewBindings.findChildViewById(rootView, id);
      if (tbLoadingText2 == null) {
        break missingId;
      }

      return new ActivityLoadingBinding((ConstraintLayout) rootView, btnLoadingCancel, progressBar,
          tbLoadingText, tbLoadingText2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
